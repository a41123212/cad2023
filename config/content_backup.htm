<h1>About</h1>
<p><img alt="" height="466" src="/images/1701309524955.png" width="313"/></p>
<p><a href="https://github.com/mdecycu/cmsite"> https://github.com/mdecycu/cmsite</a></p>
<h1>w4~w5</h1>
<p></p>
<h1>w6~w7</h1>
<p>w5 之前的教學影片:</p>
<p><a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/Ed9GeWN75kJDmWsdXEeEDukBetqQ1g_3tA_PoIY-dHXDgw?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0RpcmVjdCJ9fQ&amp;e=e6bNYA">利用隨身碟上的批次檔案進行電腦輔助設計室網路環境設定</a> (更完整的<a href="https://cpnote.wcms.repl.co/get_page/setup">網路設定內容</a>)</p>
<p><a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/ETWPxa6xUsJIvj8Ln0hiFVEB3rbHzuuUZ1z458BELWuu0A?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0RpcmVjdCJ9fQ&amp;e=qFa0uZ">w5 2b 從 Onshape 轉出零組件 STL 後轉入 CoppeliaSim 操作說明</a></p>
<p>評分網站與倉儲:</p>
<p><a href="https://mde.tw/cadnote/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/9215c7c160119721ded887018cda8f4e/raw/afc0e4d2267199743ac44bc7aeb0c4b195a30abb/generate_cad2023_2a_site_repo.py">2a cad2023 學員網站與倉儲連結</a></p>
<p><a href="https://mde.tw/cadnote/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/9215c7c160119721ded887018cda8f4e/raw/afc0e4d2267199743ac44bc7aeb0c4b195a30abb/generate_cad2023_2b_site_repo.py">2b cad2023 學員網站與倉儲連結</a></p>
<p>學員展示用 IPv6 位址:</p>
<p>2a 學員展示用 IPv6 位址: 2001:288:6004:17:2023:cada::<a href="https://mde.tw/cadnote/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/9215c7c160119721ded887018cda8f4e/raw/afc0e4d2267199743ac44bc7aeb0c4b195a30abb/generate_cad2023_2a_site_repo.py">班級名單序號</a></p>
<p><span>2b 學員展示用 IPv6 位址: 2001:288:6004:17:2023:cadb::</span><a href="https://mde.tw/cadnote/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/9215c7c160119721ded887018cda8f4e/raw/afc0e4d2267199743ac44bc7aeb0c4b195a30abb/generate_cad2023_2b_site_repo.py">班級名單序號</a></p>
<p>建立線上考試題目:</p>
<p>學員完成任務一零組件繪圖</p>
<p>學習如何利用 zmqRemote API Python 控制模擬場景中的零組件</p>
<p></p>
<p>利用 pull request 加入或修改<span> </span><a href="https://github.com/mdecycu/studlist">https://github.com/mdecycu/studlist</a> 倉儲中<span> </span><a href="https://github.com/mdecycu/studlist/blob/main/2023fall/2b.txt">2b.txt</a><span> </span>資料的<a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/EYcLIH7IUSFNtsuAwuLLebIBc0ifcIJ84bb5rQP0TCeXoQ?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0RpcmVjdCJ9fQ&amp;e=ADb8Eb">說明影片</a>.</p>
<p>利用<span> </span><a href="https://github.com/mdecycu/cmsite">https://github.com/mdecycu/cmsite</a> 作為 template 建立 cad2023 倉儲與網站, 並轉入 Replit 進行維護的<a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/EQ5O70HX369FsOYywm2Is6oBCFWC3YfTVEf2e1AmWX_8YA?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0RpcmVjdCJ9fQ&amp;e=Didp9k">說明影片</a>.</p>
<p></p>
<h1>w12</h1>
<p>11/30 機械設計二乙 出席座位表</p>
<p><a href="https://mde.tw/cadnote/downloads/2b_w12_seat.txt">2b_w12_seat.txt</a></p>
<p></p>
<pre>2b stud num	seat
41123201	
41123202	(3,8)
41123203	(3,7)
41123204	(6,8)
41123205	(2,9)
41123206	(3,4)
41123207	(1,5)
41123208	(2,3)
41123209	(2,6)
41123210	(4,3)
41123211	(6,2)
41123212	(1,7)
41123213	(1,3)
41123214	(4,1)
41123215	(1,4)
41123216	(6,9)
41123217	(6,7)
41123218	(4,5)
41123219	
41123220	(1,1)
41123221	(2,2)
41123222	(3,9)
41123223	(3,5)
41123224	(4,2)
41123226	(3,3)
41123227	(3,6)
41123228	
41123229	(5,2)
41123230	(2,7)
41123231	(1,2)
41123232	(6,5)
41123233	(2,8)
41123234	
41123235	(5,1)
41123236	(5,3)
41123237	(1,9)
41123238	(1,8)
41123239	(4,8)
41123240	(4,4)
41123241	(5,7)
41123243	(5,8)
41123244	
41123245	(4,9)
41123246	(5,6)
41123247	(6，3)
41123248	
41123249	(5,9)
41123250	(5,5)
41123251	(5,4)
41132222	(6,4)
41136103	(7,3)
41136124	(3,2)
41136126	
41136131	</pre>
<h1>w15</h1>
<p>範例圖片:</p>
<p><img alt="" height="96" src="/images/範例.png" width="163"/></p>
<p>w15</p>
<p>↓<strong>Soildwork繪製 永動機V2-等角視圖</strong></p>
<p><img alt="" height="92" src="/images/永動機1.png" width="164"/></p>
<p>↓<strong>Soildwork繪製 永動機V2-前側視圖</strong></p>
<p><strong><img alt="" height="94" src="/images/永動機2.png" width="167"/></strong></p>
<p><strong>↓Soildwork繪製 永動機V2-右側視圖</strong></p>
<p><strong><img alt="" height="96" src="/images/永動機3.png" width="171"/></strong></p>
<h1>維護網站</h1>
<p>維護網站的三個方式:</p>
<ol>
<li>localhost 透過 token, SSH 確定 git push 權限, SSH 設定可透過 Putty 完成</li>
<li>Replit 透過 connect 功能連結與 Github 的權限</li>
<li>自架主機 s1511.cycu.org, 透過 SSH 與分配埠號</li>
</ol>
<p></p>
<p>以下將說明第 3 種方法, 使用 s1511.cycu.org 管理個人與分組網站:</p>
<p>其中包括 1)<span> </span><span>如何遠端登入</span>、2 )<span> </span><span>如何取放檔案</span>、3)<span> </span><span>如何與 github 帳號彼此信任</span>、4)<span> </span><span>如何取下 cad2023</span>、5)<span> </span><span>如何啟動或關閉 cad2023 倉儲</span>、6)<span> </span><span>如何連結到動態網站</span>、7)<span> </span><span>如何設定靜態網站</span>、8)<span> </span><span>如何連動動態網站改版與靜態網頁</span>、9)<span> </span><span>如何對資料進行保全</span>以及 10)<span> </span><span>網路連線協定</span>等相關議題.</p>
<p><a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/EV9_amTTTJlLo4Xu5Hj-iR0BXMY_nn_zmcE7ynKV_aGbpw?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0RpcmVjdCJ9fQ&amp;e=7UL9k9">w8_2a_s1511 設定操作影片 part1.mp4</a></p>
<p><a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/EcHihSEDROlEg7PrHMrBcRsBzYuLtGvcg5t359aa6IL8lw?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0RpcmVjdCJ9fQ&amp;e=wMzccG">w8_2a_s1511 設定操作影片 part2.mp4</a></p>
<p><a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/EfPRpEEeDG5GiUhiJvVtbbkBL3I5eJsre7J_wk2JOivJ_w?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0RpcmVjdCJ9fQ&amp;e=fJ15QD">w8_2a_s1511 設定操作影片 part3.mp4</a> (只有前段有聲音)</p>
<p><a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/EbN6kKaMNqZFhbWxOLxJH8MBPTxN3vPo8u9ElJRe4AoPCA?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0RpcmVjdCJ9fQ&amp;e=RNOXjB">w8 2a s1511 設定操作影片 part4.mp4</a></p>
<p>1)<span><span> </span>如何遠端登入</span>:</p>
<p>遠端登入到 s1511.cycu.org (只支援 IPv6 網路協定), 命令列指令 ssh client, 工具可以使用 Putty</p>
<p>使用 ssh 指令: ssh 帳號@s1511.cycu.org 然後輸入密碼 (鍵入密碼時螢幕並不會顯示字元)</p>
<p>使用 putty.exe 設定 session 令其連接到  s1511.cycu.org</p>
<p>登出指令為 exit</p>
<p>假如在 IPv4 網路協定下, 則 ssh 指令與 putty.exe 都必須透過能支援 IPv6 的代理主機進行連線.</p>
<p>2b w8 作業: 請根據 <a href="https://mde.tw/cadnote/downloads/cad2023_2b_w8.txt">cad2023_2b_w8.txt</a> 檔案中的內容, 透過程式的讀取與篩選, 按照時間先後, 列出 2b 修課學員中已經登入 s1511.cycu.org 的學號. (修課學員名單 <span>2a: </span><a href="https://stud.cycu.org:8800/?semester=1121&amp;courseno=0838&amp;column=True">0838</a><span>, 2b: </span><a href="https://stud.cycu.org:8800/?semester=1121&amp;courseno=0851&amp;column=True">0851</a>)</p>
<p>假如在近端處理, 必須同時儲存兩個檔案後, 進行資料選取:</p>
<p><a href="https://mde.tw/cadnote/downloads/get_stud_num_from_last_data.py">get_stud_num_from_last_data.py</a> (若採 Brython 編寫, 可以直接<a href="https://mde.tw/cadnote/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/9215c7c160119721ded887018cda8f4e/raw/f9f2fd6819ae9553d51990901aa694073d51439a/get_stud_num_from_last_data.py">列出 2b w8 結果</a> (<a href="https://mde.tw/cadnote/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/9215c7c160119721ded887018cda8f4e/raw/b38df54adfd23345dcf6e0888002ea14df165968/get_stud_from_2a_last.py">2a w8 結果</a>), 依照登入時間先後排序, 其中 41123227 為管理者最早測試時登入, 若採用 ANSI 編寫:<span> </span><a href="https://mde.tw/cadnote/downloads/c_parse_last_cp2023.7z">c_parse_last_cp2023.7z</a>)</p>
<div>
<div class="syntaxhighlighter py" id="highlighter_272647">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
<div class="line number9 index8 alt2">9</div>
<div class="line number10 index9 alt1">10</div>
<div class="line number11 index10 alt2">11</div>
<div class="line number12 index11 alt1">12</div>
<div class="line number13 index12 alt2">13</div>
<div class="line number14 index13 alt1">14</div>
<div class="line number15 index14 alt2">15</div>
<div class="line number16 index15 alt1">16</div>
<div class="line number17 index16 alt2">17</div>
<div class="line number18 index17 alt1">18</div>
<div class="line number19 index18 alt2">19</div>
<div class="line number20 index19 alt1">20</div>
<div class="line number21 index20 alt2">21</div>
<div class="line number22 index21 alt1">22</div>
<div class="line number23 index22 alt2">23</div>
<div class="line number24 index23 alt1">24</div>
<div class="line number25 index24 alt2">25</div>
<div class="line number26 index25 alt1">26</div>
<div class="line number27 index26 alt2">27</div>
<div class="line number28 index27 alt1">28</div>
<div class="line number29 index28 alt2">29</div>
<div class="line number30 index29 alt1">30</div>
<div class="line number31 index30 alt2">31</div>
<div class="line number32 index31 alt1">32</div>
<div class="line number33 index32 alt2">33</div>
<div class="line number34 index33 alt1">34</div>
<div class="line number35 index34 alt2">35</div>
<div class="line number36 index35 alt1">36</div>
<div class="line number37 index36 alt2">37</div>
<div class="line number38 index37 alt1">38</div>
<div class="line number39 index38 alt2">39</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="py comments"># 讀取學號檔案</code></div>
<div class="line number2 index1 alt1"><code class="py plain">with </code><code class="py functions">open</code><code class="py plain">(</code><code class="py string">"2b_user_list.txt"</code><code class="py plain">, </code><code class="py string">'r'</code><code class="py plain">) as user_file:</code></div>
<div class="line number3 index2 alt2"><code class="py spaces">    </code><code class="py plain">user_lines </code><code class="py keyword">=</code> <code class="py plain">user_file.read().splitlines()</code></div>
<div class="line number4 index3 alt1"> </div>
<div class="line number5 index4 alt2"><code class="py comments"># 讀取 last 指令轉出的檔案, 以 last -w &gt; cad2023_2b_w8.txt 建立檔案</code></div>
<div class="line number6 index5 alt1"><code class="py plain">with </code><code class="py functions">open</code><code class="py plain">(</code><code class="py string">"cad2023_2b_w8.txt"</code><code class="py plain">, </code><code class="py string">'r'</code><code class="py plain">) as cad_file:</code></div>
<div class="line number7 index6 alt2"><code class="py spaces">    </code><code class="py comments"># 以下是利用跳行符號, 將每一行區隔成數列</code></div>
<div class="line number8 index7 alt1"><code class="py spaces">    </code><code class="py plain">cad_lines </code><code class="py keyword">=</code> <code class="py plain">cad_file.read().splitlines()</code></div>
<div class="line number9 index8 alt2"><code class="py comments">#print(cad_lines)</code></div>
<div class="line number10 index9 alt1"> </div>
<div class="line number11 index10 alt2"><code class="py comments"># 從 cad_lines 建立所有登入使用者數列</code></div>
<div class="line number12 index11 alt1"><code class="py plain">login_users </code><code class="py keyword">=</code> <code class="py plain">[]</code></div>
<div class="line number13 index12 alt2"><code class="py keyword">for</code> <code class="py plain">i </code><code class="py keyword">in</code> <code class="py plain">cad_lines:</code></div>
<div class="line number14 index13 alt1"><code class="py spaces">    </code><code class="py plain">line_list </code><code class="py keyword">=</code> <code class="py plain">i.split(</code><code class="py string">" "</code><code class="py plain">)</code></div>
<div class="line number15 index14 alt2"><code class="py spaces">    </code><code class="py plain">login_users.append(line_list[</code><code class="py value">0</code><code class="py plain">])</code></div>
<div class="line number16 index15 alt1"><code class="py comments">#print(login_users)</code></div>
<div class="line number17 index16 alt2"> </div>
<div class="line number18 index17 alt1"><code class="py comments"># 根據 https://stackoverflow.com/questions/480214/how-do-i-remove-duplicates-from-a-list-while-preserving-order</code></div>
<div class="line number19 index18 alt2"><code class="py comments"># 數列去除重複元素但仍保持原始次序</code></div>
<div class="line number20 index19 alt1"><code class="py plain">login_users </code><code class="py keyword">=</code> <code class="py functions">list</code><code class="py plain">(</code><code class="py functions">dict</code><code class="py plain">.fromkeys(login_users))</code></div>
<div class="line number21 index20 alt2"><code class="py comments">#print(login_users)</code></div>
<div class="line number22 index21 alt1"> </div>
<div class="line number23 index22 alt2"><code class="py comments"># 建立數列存放符合條件的使用者</code></div>
<div class="line number24 index23 alt1"><code class="py plain">valid_users </code><code class="py keyword">=</code> <code class="py plain">[]</code></div>
<div class="line number25 index24 alt2"> </div>
<div class="line number26 index25 alt1"><code class="py comments"># 取出符合條件的使用者</code></div>
<div class="line number27 index26 alt2"><code class="py keyword">for</code> <code class="py plain">line </code><code class="py keyword">in</code> <code class="py plain">login_users:</code></div>
<div class="line number28 index27 alt1"><code class="py spaces">    </code><code class="py keyword">if</code> <code class="py string">"cad"</code> <code class="py keyword">in</code> <code class="py plain">line:</code></div>
<div class="line number29 index28 alt2"><code class="py spaces">        </code><code class="py comments"># 將 cad 字串去除</code></div>
<div class="line number30 index29 alt1"><code class="py spaces">        </code><code class="py plain">user_number </code><code class="py keyword">=</code> <code class="py plain">line.replace(</code><code class="py string">"cad"</code><code class="py plain">, "")</code></div>
<div class="line number31 index30 alt2"><code class="py spaces">        </code><code class="py keyword">if</code> <code class="py plain">user_number </code><code class="py keyword">in</code> <code class="py plain">user_lines:</code></div>
<div class="line number32 index31 alt1"><code class="py spaces">            </code><code class="py plain">valid_users.append(user_number)</code></div>
<div class="line number33 index32 alt2"><code class="py spaces">            </code> </div>
<div class="line number34 index33 alt1"><code class="py comments"># 利用 reverse() 將 valid_users 反向排序</code></div>
<div class="line number35 index34 alt2"><code class="py plain">valid_users.reverse()</code></div>
<div class="line number36 index35 alt1"> </div>
<div class="line number37 index36 alt2"><code class="py comments"># , 最早登入者列在最前面</code></div>
<div class="line number38 index37 alt1"><code class="py keyword">for</code> <code class="py plain">user </code><code class="py keyword">in</code> <code class="py plain">valid_users:</code></div>
<div class="line number39 index38 alt2"><code class="py spaces">    </code><code class="py functions">print</code><code class="py plain">(user)</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>2)<span><span> </span>如何取放檔案</span>:</p>
<p>利用 sftp 從 s1511.cycu.org 取下檔案畫面:</p>
<p><img alt="" height="114" src="https://mde.tw/cadnote/images/w8_2b_sftp_commands.png" width="400"/></p>
<p>進入對應的目錄之後, 以 pwd 確認所在目錄後, 以 get 取下檔案, 以 put 放上檔案, 例如: 進入 images 目錄後, 可以透過 get gd_ex1.png 取下圖檔, 若要將圖檔放入 images 目錄, 則只要確定 sftp 進入後, cd 到 images 目錄, 然後以 put gd_ex1.png 將圖檔送入.</p>
<p>3)<span><span> </span>如何與 github 帳號彼此信任</span>:</p>
<p>利用 ssh-keygen 在 .ssh 目錄建立 id_rsa 與 id_rsa.pub, 之後將 id_rsa.pub 登記到各自帳號下 settings 的 SSH and GPG keys 區域.</p>
<p><span>.ssh 目錄中的 </span><a href="https://mde.tw/cpnote/downloads/config">config</a><span>, 將 SSH session 名稱設為 github.com:</span></p>
<div>
<div class="syntaxhighlighter js" id="highlighter_201792">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="js plain">Host github.com</code></div>
<div class="line number2 index1 alt1"><code class="js plain">User git</code></div>
<div class="line number3 index2 alt2"><code class="js plain">Hostname github.com</code></div>
<div class="line number4 index3 alt1"><code class="js plain">ProxyCommand /usr/bin/ncat --proxy p4.cycu.org:3128 --proxy-type http %h %p</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>將 上列 config 送到帳號下的 .ssh 目錄之後, 就可以利用 github.com 作為 session, 從 github.com 取下 cad2023 倉儲, 並且已經具備 git push 的權限.</p>
<p>4)<span> </span><span>如何取下 cad2023</span>:</p>
<p>以 SSH 協定取下 cad2023 的指令:</p>
<p>git clone --recurse-submodules<span> </span><a href="mailto:git@github.com">git@github.com</a>:帳號/cad2023.git</p>
<p>接下來必須從 cad2023 取下 server.py 進行編輯, 放入自己分配到的 9xxx 埠後, 再送回.</p>
<p>5)<span><span> </span>如何啟動或關閉 cad2023 倉儲</span>:</p>
<p>當使用者已經將上述 public key 登錄到 Github 帳號下, 且已經將 server.py 中的 9xxx 改為自己所分配到的內部埠號後再送回, 則可以利用 python3 server.py 啟動編輯網站, 並測試是否可以連線到<span> </span><a href="https://s1511.cycu.org:8xxxx">https://s1511.cycu.org:8xxxx</a></p>
<p>由於管理者內建密碼為 admin, 使用者修改後, 編碼字串將存入 config/config, 此檔案必須設為只有管理者可以 read, 若目前位於登入後的工作目錄, 則其指令為:</p>
<p>chmod og-rwx config/config</p>
<p>表示要將 others 與 group 針對 config/config 檔案的 read, write 與 execute 權限取消.</p>
<p>若希望使用者登入後動態網站仍然執行, python3 server.py&amp;</p>
<p>當 server.py 已經啟動, 使用者登入後可以利用以下指令, 列出各使用者啟動網頁編輯所對應的 PID (Process ID):</p>
<p><span>ps -axo pid,comm,uname | grep "python3"</span></p>
<p>各用戶若希望刪除已經啟動的 Process, 可以找到所啟動的 PID 後, 以下列指令關閉服務 (若 PID = 1234):</p>
<p>kill 1234</p>
<p>其中, 系統管理者可以刪除所有 Processes, 而各用戶只能刪除各自所啟動的 Process.</p>
<p>6)<span><span> </span>如何連結到動態網站</span>:</p>
<p>python3 server.py 啟動測試是否可以連線到<span> </span><a href="https://s1511.cycu.org:8xxxx">https://s1511.cycu.org:8xxxx</a></p>
<p>編輯網站啟動之後, 使用者登入後可以透過 config 指令修改管理者密碼, 而此一密碼的編碼將存入 s1511 主機倉儲檔案中的 config/config 檔案中, 且此一檔案將只會位於 s1511, 而不會被推向 github.com (因為 .gitignore 的設定).</p>
<p>當使用者決定要進行 git add 與 git commit 之前, 必須先以 git config 設定 user.name 與 user.email, 此設定將會存入 .gitconfig 檔案中.</p>
<p>7)<span><span> </span>如何設定靜態網站</span>:</p>
<p>前面已經在 /home/帳號/倉儲目錄 透過 SSH 協定從 github.com 取下檔案內容, 由於 SSH keys 的設定, 此一倉儲一旦改版, 可以在新增提交之後, 可以透過 git push 指令將改版資料推向 github.com.</p>
<p>當倉儲的靜態網站 git push 至 github.com 後, 將會透過 Github Pages 的設定進行轉檔.</p>
<p>若使用者希望在 s1511 主機中伺服對應的倉儲靜態網站, 則可以將倉儲檔案放入帳號中的 public_html 目錄中.</p>
<p>由於位於 public_html 僅需鏡射位於 github.com 中的倉儲檔案資料, 並不作為 git commit 與 git push 之用, 因此可以利用 git clone --recurse-submodules https://github.com/帳號/倉儲名稱.git 取下 (也就直接以 https 協定取下倉儲內容), 並可在 https://s1511.cycu.org/~帳號/倉儲名稱 中擷取靜態網站資料.</p>
<p>8)<span> </span><span>如何連動動態網站改版與靜態網頁:</span></p>
<p>當每次 /home/帳號/倉儲 中的檔案改版, 而且資料已經推送到 github.com, 使用者就可以進入 public_html 中的對應倉儲目錄, 以 git pull 指令從 github.com 取得最新的版本資料, 此指令可以採手動, 也可以設法納入倉儲的 acp 指令中:</p>
<p>acp 必須納入 public_html 目錄中的靜態網站 git pull, 且利用 chmod u+x acp 令其可以執行.</p>
<p><a href="https://mde.tw/cadnote/downloads/acp">acp</a><span> </span>內容:</p>
<div>
<div class="syntaxhighlighter js" id="highlighter_841789">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="js preprocessor">#! /bin/bash</code></div>
<div class="line number2 index1 alt1"><code class="js plain">git add .</code></div>
<div class="line number3 index2 alt2"><code class="js plain">git commit -m </code><code class="js string">"$1"</code></div>
<div class="line number4 index3 alt1"><code class="js plain">git push</code></div>
<div class="line number5 index4 alt2"><code class="js plain">cd ./../public_html/cad2023</code></div>
<div class="line number6 index5 alt1"><code class="js plain">git pull</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>9)<span><span><span> </span>如何對資料進行保全:</span></span></p>
<p>chmod u+x acp</p>
<p>chmod og-rwx config/config</p>
<p>chmod 711 /home/cad學號</p>
<p>chmod 755 /home/cad學號/public_html</p>
<p>假如自己所分派到的網路 port 遭到占用, 可以利用下列指令查出使用該埠號的使用者帳號:</p>
<p>例如要查詢埠號 9210 埠號的使用情形, 指令為 <span>lsof -i :9210, 其中 ls 為 list, of 為 open file, -i 中的 i 為 internet, :9210 表示要求列出與 port 9210 有關 internet 使用相關的資料.</span></p>
<p>10)<span><span> </span>網路連線協定:</span></p>
<p>將 cad2023 倉儲資料取到 s1511.cycu.org 帳號下, 若使用 SSH 協定且位於只有 IPv6 網路協定, 則分別牽涉以 SSH 及 https 協定連線到 github.com 的設定.</p>
<p>其中所謂運用 SSH 協定與 github.com 連線, 運用在 git clone --recurse-submodules<span> </span><a href="mailto:git@github.com:%E5%B8%B3%E8%99%9F/cad2023.git">git@github.com:帳號/cad2023.git</a><span> </span>因為其流程是利用 SSH 協定以 git 作為帳號登入到 session 名稱為 github.com 的連線主機 (即 config 中的 Hostname 設定), 能不能遠端登入則取決於 github.com session (即 config 設定檔案中的 Host 名稱) 後面的帳號是否已經登錄與目前 .ssh/id_rsa 所對應的 public key.</p>
<p>至於在純 IPv6 網路下的 s1511.cycu.org 其 https 所需的 proxy 設定, 已經由管理者設定於 /etc/environment 中, 因此所有使用者都無需設定.</p>
<p><strong></strong></p>
<h1>Brython</h1>
<p><a href="https://en.wikipedia.org/wiki/Python_(programming_language)">https://en.wikipedia.org/wiki/Python_(programming_language)</a></p>
<h4>Examples:</h4>
<p style="padding-left: 30px;"><a href="https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d">https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d</a></p>
<p style="padding-left: 30px;"><a href="https://www.geeksforgeeks.org/python-programming-examples/">https://www.geeksforgeeks.org/python-programming-examples/</a></p>
<p style="padding-left: 30px;"><a href="https://www.programiz.com/python-programming/examples">https://www.programiz.com/python-programming/examples</a></p>
<p style="padding-left: 30px;"><a href="https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/">https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/</a></p>
<h4>Python Tutorial:</h4>
<p style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/">https://docs.python.org/3/tutorial/</a></p>
<p style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/introduction.html">An informal introduction to Python</a></p>
<h4>Indentation (Python 採 4 個 Spaces 縮排, 以界定執行範圍)</h4>
<h4>Variables (<a href="https://github.com/python/cpython/blob/3.11/Lib/keyword.py">Python Keywords</a>)</h4>
<h4>Comments (# 單行註解, 三個單引號或三個雙引號標註多行註解)</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#numbers">Numbers</a> (整數 int(), 浮點數 float())</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#strings">Strings</a> (字串)</h4>
<h4>print (Python 內建函式, <a href="https://docs.python.org/3/library/functions.html#print">print()</a> 函式)</h4>
<p><a href="https://docs.python.org/3/tutorial/controlflow.html">Python control flow tools</a></p>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#for-statements">for</a></h4>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#if-statements">if</a></h4>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#the-range-function">range</a></h4>
<h4>open</h4>
<h4>read</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#lists">lists</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/datastructures.html#tuples-and-sequences">tuples</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries">dictionaries</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#defining-functions">functions</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/errors.html#exceptions">try ... except</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#break-and-continue-statements-and-else-clauses-on-loops">break</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#pass-statements">pass</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/classes.html?highlight=classes">classes</a></h4>
<p>這個頁面 demo 如何在同一頁面下納入多個線上 Ace 編輯器與執行按鈕 (<a href="/downloads/practice_html.txt">practice_html.txt</a> 動態頁面超文件).</p>
<p><a href="/downloads/practice_html.txt">practice_html.txt</a> 動態頁面超文件應該可以在啟動 Brython 時, 設定將 .py 檔案放入 downloads/py 目錄中引用.</p>
<p>亦即將所有對應的 html 也使用 Brython 產生, 然後寫為 <a href="https://docs.python.org/3/tutorial/classes.html">class</a> 後, 在範例導入時透過 <a href="https://docs.python.org/3/tutorial/classes.html#instance-objects">instance</a> 引用.</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">&lt;!-- 啟動 Brython --&gt;
&lt;script&gt;
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
&lt;/script&gt;</pre>
<p>從 1 累加到 100:</p>
<p><button id="add1to100">1 add to 100</button></p>
<p>將 iterable 與 iterator <a href="https://home.gamer.com.tw/creationDetail.php?sn=4337438">相關說明</a>, 利用 Brython 與 Ace Editor 整理在這個頁面.</p>
<!-- 導入 brython 程式庫 -->
<p>
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
</p>
<!-- 啟動 Brython -->
<p>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
</p>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="/static/Cango-24v03-min.js"></script>
<script src="/static/gearUtils-09.js"></script>
<script src="/static/SVGpathUtils-6v03-min.js"></script>
<script src="/static/sylvester.js"></script>
<script src="/static/PrairieDraw.js"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
</p>
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# id 為 "add1to100" 的按鈕點按時, 執行 add 方法
doc["add1to100"].bind('click', add)
</script>
</p>
<p><!-- add 1 to 100 結束--></p>
<!-- editor1 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div1"></div>
<!-- editor1 結束 --><hr/><!-- ########################################## -->
<p>從 1 累加到 100 part2:</p>
<p><button id="add1to100part2">1 add to 100</button><button id="cango_three_gears">cango_three_gears</button><button id="bsnake">BSnake</button><button id="aitetris">AI Tetris</button><button id="threejsblock">Rotating Block</button></p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()
Ace3 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run2():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src2"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace3.editor.setValue(prog)
    Ace3.editor.scrollToRow(0)
    Ace3.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace3.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run2'].bind('click', Ace3.run)
doc['kw_show_console2'].bind('click', Ace3.show_console)
doc['kw_clear_console2'].bind('click', Ace3.clear_console)
doc['clear_bd2'].bind('click', clear_bd2)
# 呼叫函式執行
run2()
</script>
</p>
<p><!-- add 1 to 100 part2 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace4 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )

# 透過 Ace4 以類別建立一個通用的 button2, 可以在多個案例中將 gist 程導入編輯區

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace4.editor.setValue(open(self.url).read())
        Ace4.editor.scrollToRow(0)
        Ace4.editor.gotoLine(0)
        Ace4.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add2(ev):
    Ace4.editor.setValue(add_src)
    Ace4.editor.scrollToRow(0)
    Ace4.editor.gotoLine(0)
    Ace4.run()

# id 為 "add1to100part2" 的按鈕點按時, 執行 add 方法
doc["add1to100part2"].bind('click', add2)
# 以下為運用 button2 class 的通用 gist 程式導入區
################################## cango_three_gears start
cango_three_gears_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/cango_three_gears_brython_div2.py"
cango_three_gears = button2(cango_three_gears_url)
doc["cango_three_gears"].bind("click", cango_three_gears.do)
################################## cango_three_gears end
################################## bsnake start
bsnake_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/kmol_snakey.py"
bsnake = button2(bsnake_url)
doc["bsnake"].bind("click", bsnake.do)
################################## bsnake end
################################## aitetris start
aitetris_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/pygame_to_brython_tetris_ai.py"
aitetris = button2(aitetris_url)
doc["aitetris"].bind("click", aitetris.do)
################################## aitetris end
################################## threejsblock start
threejsblock_url = "https://gist.githubusercontent.com/mdecycu/2c6323eff49b496d1bafd210f3ec9707/raw/df37802f9e8a386b6424f7945af622b1cd0a9ca5/threejs_rotating_block.py"
threejsblock = button2(threejsblock_url)
doc["threejsblock"].bind("click", threejsblock.do)
################################## threejsblock end
</script>
</p>
<p><!-- add 1 to 100 part2 結束--></p>
<!-- editor2 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor2" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename2" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src2', 'kw_filename2');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run2">Run</button> <button id="kw_show_console2">Output</button> <button id="kw_clear_console2">清除輸出區</button><button id="clear_bd2">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console2"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div2"></div>
<!-- editor2 結束 --><hr/>
<p>
<script src="https://unpkg.com/three@0.144.0/build/three.js" type="text/javascript"></script>
</p>